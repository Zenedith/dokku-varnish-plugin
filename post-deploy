#!/usr/bin/env bash
# Notify an external service that a successful deploy has occurred.

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/certs/functions"
source "$PLUGIN_AVAILABLE_PATH/config/functions"
source "$PLUGIN_AVAILABLE_PATH/domains/functions"

# load common functions
. $(dirname "$0")/functions

check_app_name $1
APP="$1"
PORT="$2"

init_app_vars

dokku_log_info1 "Varnish post-deploy for $APP"

set +e
VARNISH_PORT=$(cat "$VARNISH_PORT_PROPERTY")
VARNISH_IP=$(cat "$VARNISH_IP_PROPERTY")
VARNISH_IMAGE_ID=$(docker images | grep "$VARNISH_IMAGE" | awk '{print $3}')
VARNISH_BACKEND_IP=$(cat "$VARNISH_BACKEND_IP_PROPERTY")
set -e

if [ -n "$VARNISH_BACKEND_IP" ]; then
  dokku_log_verbose "Checking status... needs restart."
  ID=$(get_varnish_id)

  # Stop and remove the container
  if [[ ! -z $ID ]]; then
    docker kill $ID > /dev/null
    sleep 1
    docker rm -v $ID > /dev/null
    sleep 1
  fi
  ID=$(docker run -e LISTEN_PORT="$VARNISH_PORT" -e CACHE_SIZE="$VARNISH_CACHE_SIZE" -e THROTTLE_LIMIT="$VARNISH_THROTTLE_LIMIT" -e GRACE_TTL="$VARNISH_GRACE_TTL" -e GRACE_MAX="$VARNISH_GRACE_MAX" -e BACKEND_PORT_${APP_PORT}_TCP_ADDR="$LOCAL_IP" -e BACKEND_ENV_PORT="$APP_PORT" -p $VARNISH_PORT -d $VARNISH_IMAGE /bin/run.sh)
  sleep 4
  dokku_log_verbose "Started $VARNISH_IMAGE"
fi

if [[ -n "$VARNISH_PORT" ]]; then
  if [[ -n "$VARNISH_IP" ]]; then
    is_deployed "$APP" && dokku nginx:build-config "$APP" "$VARNISH_PORT" "$VARNISH_IP"
  fi
fi

sudo /etc/init.d/nginx reload > /dev/null
